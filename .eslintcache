[{"D:\\React-todo-list-master\\src\\index.js":"1","D:\\React-todo-list-master\\src\\reportWebVitals.js":"2","D:\\React-todo-list-master\\src\\App.js":"3","D:\\React-todo-list-master\\src\\components\\TodoList.js":"4","D:\\React-todo-list-master\\src\\components\\Card.js":"5","D:\\React-todo-list-master\\src\\modals\\CreateTask.js":"6","D:\\React-todo-list-master\\src\\modals\\EditTask.js":"7"},{"size":500,"mtime":1627376360554,"results":"8","hashOfConfig":"9"},{"size":362,"mtime":1627376360578,"results":"10","hashOfConfig":"9"},{"size":366,"mtime":1627380292764,"results":"11","hashOfConfig":"9"},{"size":1804,"mtime":1627383190057,"results":"12","hashOfConfig":"9"},{"size":1916,"mtime":1627376360600,"results":"13","hashOfConfig":"9"},{"size":1701,"mtime":1627383954911,"results":"14","hashOfConfig":"9"},{"size":1844,"mtime":1627376360633,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"oecudl",{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"20","messages":"21","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"22"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31"},"D:\\React-todo-list-master\\src\\index.js",[],"D:\\React-todo-list-master\\src\\reportWebVitals.js",[],"D:\\React-todo-list-master\\src\\App.js",["32"],"import logo from './logo.svg';\nimport './App.css';\nimport TodoList from './components/TodoList'\n//import 'bootstrap/dist/css/bootstrap.min.css'\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css'\nimport 'font-awesome/css/font-awesome.min.css'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <TodoList />\n    </div>\n  );\n}\n\nexport default App;\n","D:\\React-todo-list-master\\src\\components\\TodoList.js",[],"D:\\React-todo-list-master\\src\\components\\Card.js",[],"D:\\React-todo-list-master\\src\\modals\\CreateTask.js",[],"D:\\React-todo-list-master\\src\\modals\\EditTask.js",["33"],"import React, { useState , useEffect} from 'react';\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\n\nconst EditTaskPopup = ({modal, toggle, updateTask, taskObj}) => {\n    const [taskName, setTaskName] = useState('');\n    const [description, setDescription] = useState('');\n\n    const handleChange = (e) => {\n        \n        const {name, value} = e.target\n\n        if(name === \"taskName\"){\n            setTaskName(value)\n        }else{\n            setDescription(value)\n        }\n\n\n    }\n\n    useEffect(() => {\n        setTaskName(taskObj.Name)\n        setDescription(taskObj.Description)\n    },[])\n\n    const handleUpdate = (e) => {\n        e.preventDefault();\n        let tempObj = {}\n        tempObj['Name'] = taskName\n        tempObj['Description'] = description\n        updateTask(tempObj)\n    }\n\n    return (\n        <Modal isOpen={modal} toggle={toggle}>\n            <ModalHeader toggle={toggle}>Update Task</ModalHeader>\n            <ModalBody>\n            \n                    <div className = \"form-group\">\n                        <label>Task Name</label>\n                        <input type=\"text\" className = \"form-control\" value = {taskName} onChange = {handleChange} name = \"taskName\"/>\n                    </div>\n                    <div className = \"form-group\">\n                        <label>Description</label>\n                        <textarea rows = \"5\" className = \"form-control\" value = {description} onChange = {handleChange} name = \"description\"></textarea>\n                    </div>\n                \n            </ModalBody>\n            <ModalFooter>\n            <Button color=\"primary\" onClick={handleUpdate}>Update</Button>{' '}\n            <Button color=\"secondary\" onClick={toggle}>Cancel</Button>\n            </ModalFooter>\n      </Modal>\n    );\n};\n\nexport default EditTaskPopup;",{"ruleId":"34","severity":1,"message":"35","line":1,"column":8,"nodeType":"36","messageId":"37","endLine":1,"endColumn":12},{"ruleId":"38","severity":1,"message":"39","line":24,"column":7,"nodeType":"40","endLine":24,"endColumn":9,"suggestions":"41"},"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'taskObj.Description' and 'taskObj.Name'. Either include them or remove the dependency array. If 'setTaskName' needs the current value of 'taskObj.Name', you can also switch to useReducer instead of useState and read 'taskObj.Name' in the reducer.","ArrayExpression",["42"],{"desc":"43","fix":"44"},"Update the dependencies array to be: [taskObj.Description, taskObj.Name]",{"range":"45","text":"46"},[628,630],"[taskObj.Description, taskObj.Name]"]